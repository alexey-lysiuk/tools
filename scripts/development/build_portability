#!/bin/sh

set -o errexit

cd /Volumes/ramdisk
mkdir portability-build

cd portability-build
mkdir rust temp .cargo

#
# Download and extract Rust
#

cd temp

# See https://forge.rust-lang.org/infra/other-installation-methods.html#standalone-installers
RUST_VERSION=1.51.0

RUST_PACKAGE_INTEL=rust-${RUST_VERSION}-x86_64-apple-darwin.pkg
curl -JOL "https://static.rust-lang.org/dist/${RUST_PACKAGE_INTEL}"

RUST_PACKAGE_ARM=rust-${RUST_VERSION}-aarch64-apple-darwin.pkg
curl -JOL "https://static.rust-lang.org/dist/${RUST_PACKAGE_ARM}"

echo "d838ecfe023c3aa2677fc9817190d3b45f09cc65afe3be8119b857795adc0f31  ${RUST_PACKAGE_INTEL}" >> rust.sha256
echo "cff7bcc350ccf57be4fcc03d28c72a7223d426ea78d5793991dfc352495b4c3f  ${RUST_PACKAGE_ARM}" >> rust.sha256
shasum -c rust.sha256

if [[ "$(uname -m)" -eq "x86_64" ]]; then
	RUST_PACKAGE_NATIVE=${RUST_PACKAGE_INTEL}
	RUST_PACKAGE_OTHER=${RUST_PACKAGE_ARM}
else
	RUST_PACKAGE_NATIVE=${RUST_PACKAGE_ARM}
	RUST_PACKAGE_OTHER=${RUST_PACKAGE_INTEL}
fi

xar -xf "${RUST_PACKAGE_NATIVE}"

tar -xf cargo.pkg/Scripts
cp -r cargo/* ../rust

tar -xf rustc.pkg/Scripts
cp -r rustc/* ../rust

tar -xf rust-std.pkg/Scripts
cp -r rust-std-*-apple-darwin/* ../rust

xar -xf "${RUST_PACKAGE_OTHER}"

tar -xf rust-std.pkg/Scripts
cp -r rust-std-*-apple-darwin/* ../rust

cd ..
rm -rf temp

#
# Download and build Portability
#

export PATH=$PATH:`pwd`/rust/bin
export CARGO_HOME=`pwd`/.cargo

git clone https://github.com/gfx-rs/portability.git
cd portability

if [ -n "$1" ]; then
	git checkout "$1"
fi

cargo_build()
{
	ARCH=$1
	VERSION=$2

	export CPPFLAGS="-mmacosx-version-min=${VERSION} -isysroot /Volumes/Storage/Work/devbuilds/macos_sdk/MacOSX${VERSION}.sdk"
	export CFLAGS=${CPPFLAGS}
	export CXXFLAGS=${CPPFLAGS}
	export OBJCFLAGS=${CPPFLAGS}
	export OBJCXXFLAGS=${CPPFLAGS}
	export LDFLAGS=${CPPFLAGS}
	export MACOSX_DEPLOYMENT_TARGET=${VERSION}

	cargo -vv build --manifest-path libportability/Cargo.toml --target ${ARCH}-apple-darwin --features metal --release
}

cargo_build x86_64 10.11
cargo_build aarch64 11.0

lipo target/x86_64-apple-darwin/release/libportability.dylib target/aarch64-apple-darwin/release/libportability.dylib -create -output libvulkan.dylib
zip -9 ../gfx-portability.zip libvulkan.dylib
